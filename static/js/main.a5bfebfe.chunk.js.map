{"version":3,"sources":["Movie/Movie.js","MovieList/MovieList.js","Header/Header.js","MovieDetail/MovieDetail.js","api-calls/api-calls.js","Search/Search.js","App/App.js","reportWebVitals.js","index.js"],"names":["Movie","id","poster","rating","releaseDate","title","to","className","alt","src","toFixed","MovieList","movies","length","movieTiles","map","movie","poster_path","backdrop","backdrop_path","average_rating","release_date","Header","type","searchInput","MovieDetail","handleErrors","response","ok","json","setState","error","state","this","props","fetch","then","data","catch","style","backgroundImage","aria-label","role","substring","tagline","genres","join","runtime","budget","toLocaleString","revenue","overview","Component","Search","handleChange","e","target","value","placeholder","name","onChange","onClick","handleSearch","App","searchedMovies","filter","toUpperCase","includes","path","render","match","params","exact","parseInt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a5bfebfe.chunk.js","sourcesContent":["import React from 'react';\nimport './Movie.css';\nimport { Link } from 'react-router-dom';\n\nconst Movie = ({ id, poster, rating, releaseDate, title }) => {\n\n  return(\n    <Link to={`/${id}`}>\n    <article id={id} className='movie'>\n      <div className='poster-section'>\n      <img alt={`${title} movie poster`} className='poster-image' src={poster} />\n      <p className='rating'>{rating.toFixed(1)}</p>\n      </div>\n      <div className='movie-label'>\n        <h3 className='title'>{title}</h3>\n        <p className='release-date'>Release date: {releaseDate}</p>\n      </div>\n    </article>\n    </Link>\n  )\n}\n\nexport default Movie\n","import React from 'react';\nimport Movie from '../Movie/Movie';\nimport { Redirect } from 'react-router-dom';\nimport './MovieList.css';\n\nconst MovieList = ({ movies }) => {\n  if (!movies) {\n    return (\n      <>\n      <Redirect to='/' />\n      <h1>Refreshing the main page...</h1>\n      </>\n    )\n  } else if (!movies.length) {\n    return (<h1 className='no-results'>There are no movie titles matching your search</h1>)\n  } else if (movies.length) {\n    const movieTiles = movies.map(movie => {\n      return (\n        <Movie\n          id={movie.id}\n          poster={movie.poster_path}\n          backdrop={movie.backdrop_path}\n          title={movie.title}\n          rating={movie.average_rating}\n          releaseDate={movie.release_date}\n          key={movie.id}\n        />\n      )\n    })\n  return <div className=\"movie-list\">{movieTiles}</div>\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = ({ type }) => {\n  return (\n    <header className='header'>\n      <Link to='/'>\n        <h1 className='app-name'>rancid tomatillos</h1>\n      </Link>\n        {type === 'main' &&\n          <h2 className='page-title'>Popular Movies this Month</h2>}\n        {type !== 'main' &&\n          <h2 className='page-title'>Search results for \"{type.searchInput}\"</h2>}\n    </header>\n  )\n}\n\nexport default Header\n","import React, { Component } from 'react';\nimport { getMovieDetails } from '../api-calls/api-calls'\nimport './MovieDetail.css';\nimport { Link } from 'react-router-dom'\n\nclass MovieDetail extends Component{\n  constructor() {\n    super()\n    this.state = {\n      movie: null,\n      error: ''\n    }\n  }\n\n\n  componentDidMount() {\n    getMovieDetails(this.props.id)\n      .then(response => this.handleErrors(response))\n      .then(data => this.setState({ movie: data.movie }))\n      .catch(error => this.setState({ error: 'Something went wrong, please try again.' }))\n  }\n\n  handleErrors = (response) => {\n    if (!response.ok) {\n      this.setState(\n        { error: 'Something went wrong, please try again.'}\n      )\n    } else {\n      return response.json()\n    }\n  }\n\n  render() {\n    const { movie } = this.state;\n    if (!this.state.movie && this.state.error) {\n      return <h1 className='error-message'>{this.state.error}</h1>\n    } else if (!this.state.movie) {\n      return (<h1>Loading...</h1>)\n    }\n    return (\n      <article className='movie-expanded' style={{\n          backgroundImage: 'url('+ movie.backdrop_path +')'}}>\n        <Link to ={'/'}>\n          <i className='fas fa-arrow-circle-left fa-3x'\n          aria-label='Back Button' role='button'>\n          </i>\n        </Link>\n        <div className='double-poster-wrapper'>\n          <div className='poster-wrapper'>\n            <img alt={`${movie.title} movie poster`} className='poster' src={movie.poster_path} />\n            <p className='average-rating'>{movie.average_rating.toFixed(1)}</p>\n          </div>\n        </div>\n        <div className='info-section'>\n          <h3 className='movie-title'>{movie.title} ({movie.release_date.substring(0,4)})</h3>\n          <p className='tagline'>{movie.tagline}</p>\n          <div className='top-card'>\n            <div className='main-details'>\n              <p>{movie.genres.join('/ ')}</p>\n              <p>{movie.runtime} minutes</p>\n            </div>\n            <div className='movie-details-aside'>\n              <p>Budget: ${movie.budget.toLocaleString()}</p>\n              <p>Revenue: ${movie.revenue.toLocaleString()}</p>\n            </div>\n          </div>\n          <p className='overview'>{movie.overview}</p>\n        </div>\n      </article>\n    )\n  }\n\n}\n\nexport default MovieDetail;\n","export const getAllMovies = () => {\n  return fetch('https://rancid-tomatillos.herokuapp.com/api/v2/movies')\n    .then(response => response.json())\n}\n\nexport const getMovieDetails = (id) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    .then(response => response)\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor() {\n    super()\n    this.state = {\n      searchInput: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({searchInput: e.target.value});\n  }\n\n  render() {\n    return (\n      <form className='form'>\n        <input type='text' placeholder='Search for a movie title' name='search' value={this.state.searchInput} onChange={e => this.handleChange(e)}/>\n        <Link to={`/search/${this.state.searchInput}`}>\n            <button className='search-button' type='submit' name='search' onClick={(e) => {\n              this.props.handleSearch(this.state.searchInput)\n              this.setState({searchInput: ''})\n              }\n            }\n            >Search</button>\n        </Link>\n      </form>\n    )\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport MovieList from '../MovieList/MovieList';\nimport Header from '../Header/Header';\nimport './App.css';\nimport MovieDetail from '../MovieDetail/MovieDetail';\nimport Search from '../Search/Search';\nimport { getAllMovies } from '../api-calls/api-calls';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      error:''\n    }\n  }\n\n  componentDidMount() {\n    getAllMovies()\n      .then(data => this.setState({ movies: data.movies }))\n      .catch(error => this.setState({ error: 'Something went wrong, please try again later.' }))\n  }\n\n  handleSearch = (searchInput)  => {\n    !searchInput && this.setState({searchedMovies: this.state.movies})\n    const searchedMovies = this.state.movies.filter(movie => movie.title.toUpperCase().includes(searchInput.toUpperCase()));\n    searchedMovies !== [] &&\n    this.setState({searchedMovies: searchedMovies});\n   \n  }\n\n  render() {\n    return (\n      <main className='main'>\n        {this.state.error &&\n          <h1 className='error-message'>{this.state.error}</h1>}\n        {!this.state.movies.length && !this.state.error &&\n          <h1 className='loading-message'>Movies are on the way!</h1>}\n        <Switch>\n        <Route path='/search/:searchInput' render={({ match }) => {\n          const searchInput = match.params\n            return (\n            <>\n              <Search handleSearch={this.handleSearch}/>\n              <Header type={searchInput}/>\n              <MovieList movies={ this.state.searchedMovies } key='SEARCH'/>\n            </>)\n          }}/>\n          <Route exact path='/' render={() => {\n            return (\n              <>\n                <Search handleSearch={this.handleSearch}/>\n                <Header type='main'/>\n                <MovieList movies={ this.state.movies } key='MAIN' />\n              </>\n            )\n          }}/>\n          <Route exact path='/:id' render={({ match }) => {\n            const { id } = match.params\n            if (!parseInt(id)) {\n              return (<Redirect to='/' />)\n            } else {\n            return <MovieDetail id={ parseInt(id) } />\n            }\n          }}/>\n        </Switch>\n      </main>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = <BrowserRouter> <App /> </BrowserRouter>;\n\nReactDOM.render(router, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}